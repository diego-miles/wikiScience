// Model for the Electronic Component
model ElectronicComponent {
  id                              String                                      @id @default(auto()) @map("_id") @db.ObjectId
  name                            String                      @unique           
  slug                            String                      @unique
  description                     String?
  category                        String[]
  type                            String?
  subtype                         String?
  manufacturers                   Manufacturers[]
  lifeSpan                        LifeSpan?
  history                         ComponentHistory[]
  functionDiagram                 String?
  operationDiagram                String?
  availability                    Availability?
  // eolDate               DateTime
  pricing                         Pricing?
  footprint                       Footprint?
  standardsAndRegulations         StandardsAndRegulations[]
  createdAt                       DateTime?  @default(now())
  updatedAt                       DateTime?                                   @updatedAt @map("updatedAt")
  variants                        ElectronicComponentVariant[]
  Measurements ElectronicComponentMeasurements[]
  function                        ElectronicComponentFunction?
  operation                       ElectronicComponentOperation?
  applications                    ElectronicComponentApplication[]
  thermalSpecifications           ElectronicComponentThermalSpecifications?
  datasheets                      ElectronicComponentDatasheet[]
  additionalResources             ElectronicComponentAdditionalResource[]
  packageType           PackageTypes?
  packageDimensions    PackageDimensions?
  pinCount              String?
  mountingType          MountingType?
  // Reliability
  mtbf                 Mtbf? // Mean Time Between Failures
  failureRate          FailureRate?
  // Environmental
  rohsCompliant         RohsCompliant?
  reachCompliant        ReachCompliant?
  leadFree             String?
}

type PackageTypes {
  description String?
  source String?
}

type MountingType {
  description String?
  source String?
}

type LifeSpan {
  value String?
  source String?
}

type PackageDimensions {
  description String?
  source String?
}


type Mtbf {
  description String?
  source String?
}


type FailureRate {
  description String?
  source String?
}

type RohsCompliant {
  description String?
  source String?
}

type ReachCompliant {
  description String?
  source String?
}



type Manufacturers {
  name String?
  link String?
}


type Availability {
  status Boolean?
  description String?
}

type Pricing {
  value String?
  condition String?
}

type Footprint {
  description String?
  source String?
}



type StandardsAndRegulations {
  name String?
  description String?
  link String?
}



type ComponentHistory {
  event String?
  year String?
  description String?
  source String?
}

// Model for Electronic Component Variants
type ElectronicComponentVariant {
  name                    String?
  description             String?
  source                 String?
}

// Model for Measurements in Science about Electronic Components
type ElectronicComponentMeasurements {
  parameter               String?
  value String?
  condition String?
  description String?
  source String?

}

// Model for Electronic Component Functions
type ElectronicComponentFunction {
  Function         String?
  physicalPrinciples      String[]
  chemistryPrinciples     String[]
  comparisons             Comparisons[]
  capabilities            String[]
  limitations             String[]
  diagrams                String?
}


type Comparisons {
comparison      String?
source          String?
}


// Model for Electronic Component Operations
type ElectronicComponentOperation {
  internalStructure          String?
  operatingMechanisms        String?
  inputOutputCharacteristics String?
  functionalRelationships    FunctionalRelationships[]
  equations                  Equations[]
}

type FunctionalRelationships {
  relationship String?
  source String?
}


type Equations {
  equation String?
  description String?
}

// Model for Electronic Component Applications
type ElectronicComponentApplication {
  field                   String?
  examples                String[]
  designConsiderations    DesignConsiderations[]
  challenges              Challenges[]
  source              String?
}

type DesignConsiderations {
  consideration String?
  explanation   String?
}

type Challenges {
  challenge     String?
  explanation   String?
}



// Model for Thermal Specifications of Electronic Components
type ElectronicComponentThermalSpecifications {
  thermalResistanceJunctionToCase    ThermalResistanceJunctionToCase?
  thermalResistanceJunctionToAmbient ThermalResistanceJunctionToAmbient?
  maximumOperatingTemperature        MaximumOperatingTemperature?
  minimumOperatingTemperature        MinimumOperatingTemperature?
}


type ThermalResistanceJunctionToCase {
  description String?
  source String?
}

type ThermalResistanceJunctionToAmbient {
  description String?
  source String?
}

type MaximumOperatingTemperature {
  value String?
  condition String?
  description String?
  source String?
}

type MinimumOperatingTemperature {
  value String?
  condition String?
  description String?
  source String?
}




// Model for Additional Resources of Electronic Components
type ElectronicComponentAdditionalResource {
  type                    String?
  description             String?
  link                    String?
}

// Model for Datasheets of Electronic Components
type ElectronicComponentDatasheet {
  name                                         String?
  description                                  String?
  url                                          String?
}


