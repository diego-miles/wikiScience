
model Word {
  id          String    @id @map("_id") @db.ObjectId
  word        String    
  slug        String    @unique
  pronunciation String?
  definitions  Definition[]
  etymology    String?
  synonyms     String[]
  antonyms     String[]
  examples     String[]
  images       String[]
  audio        String?
  language    String
  tags         String[]
  relatedConcepts  RelatedConcept[]
  applications  Application[]
  measurementUnits  MeasurementUnit[]
  historicalSignificance  HistoricalSignificance[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  @@index([word, language])
}

model RelatedConcept {
  id            String    @id @map("_id") @db.ObjectId
  concept        String
  word           Word      @relation(fields: [wordId], references: [id])
  wordId         String    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Application {
  id            String    @id @map("_id") @db.ObjectId
  application    String
  word           Word      @relation(fields: [wordId], references: [id])
  wordId         String    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model MeasurementUnit {
  id            String    @id @map("_id") @db.ObjectId
  unit          String
  word           Word      @relation(fields: [wordId], references: [id])
  wordId         String    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model HistoricalSignificance {
  id            String    @id @map("_id") @db.ObjectId
  event          String
  word           Word      @relation(fields: [wordId], references: [id])
  wordId         String    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}



model Definition {
  id            String    @id @map("_id") @db.ObjectId
  partOfSpeech   String
  meaning        String
  example        String?
  word           Word      @relation(fields: [wordId], references: [id])
  wordId         String    @db.ObjectId
  source        Source?    @relation(fields: [sourceId], references: [id])
  sourceId      String?    @db.ObjectId
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Source {
  id             String    @id @map("_id") @db.ObjectId
  author         String?   // Last name, First initial. Middle initial (if applicable) 
  publicationYearDate String?      // Year of publication
  title          String    
  url            String?   // Include DOI if available
  sourceType     String?   // Book, Journal Article, Website, etc. (use controlled vocabulary) 

  // Book-Specific Fields
  bookEdition    String?
  publisher      String?
  placeOfPublication String?

  // Journal Article-Specific Fields
  journalName   String?
  volume         String?
  issue          String?
  pages          String? 

  // Website-Specific Fields
  websiteName    String?
  publicationDateofWebPublication String? // Can be more specific than year, e.g., "2023-11-20" 
  accessDate      String?

  definitions    Definition[]
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt 
}