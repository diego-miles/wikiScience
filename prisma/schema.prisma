generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type BookRatings {
  amazon    BookRatingsAmazon
  goodreads BookRatingsGoodreads
  google    BookRatingsGoogle
}

type BookRatingsAmazon {
  /// Multiple data types found: Float: 99.8%, Int: 0.2% out of 460 sampled entries
  average Json
  link    String
  number  Int
}

type BookRatingsGoodreads {
  /// Multiple data types found: Float: 99.8%, Int: 0.2% out of 460 sampled entries
  average Json
  link    String
  number  Int
}

type BookRatingsGoogle {
  average Float
  link    String
  number  Int
}

type BookSyllabus {
  Appendix    String[]
  Authors     String[]
  Chapter     String?
  /// Multiple data types found: Array(String): 40%, Array(BookSyllabusChapters): 60% out of 46 sampled entries
  Chapters    Json?
  Page        Int?
  Pages       String[]
  /// Multiple data types found: Array(String): 92.5%, Array(BookSyllabusSections): 7.5% out of 257 sampled entries
  Sections    Json?
  Subsections String[]
  Tales       String[]
  Topics      String[]
  addenda     String[]
  chapter     String
  /// Multiple data types found: Array(String): 65%, Array(BookSyllabusChapters): 35% out of 26 sampled entries
  chapters    Json?
  content     String[]
  indexes     String[]
  /// Multiple data types found: Array(String): 0.6%, Array(BookSyllabusSections): 99.4% out of 1773 sampled entries
  sections    Json?
  subsections String[]
  title       String?
}

type BookSyllabusChapters {
  Authors  String?
  Chapter  String?
  Page     Int?
  Sections String[]
  sections String[]
  title    String?
}

type BookSyllabusSections {
  Chapter     String?
  Sections    String[]
  Subsections String[]
  Title       String?
  content     String[]
  page        Int?
  sections    String[]
  subsections BookSyllabusSectionsSubsections[]
  title       String?
}

type BookSyllabusSectionsSubsections {
  subsections String[]
  title       String
}

type ChemicalElementAllotropes {
  description      String
  name             String
  temperatureRange String?
}

type ChemicalElementAtomicStructure {
  atomicPolarization       String?
  atomicRadius             String
  covalentRadius           String?
  description              String?
  electronAffinity         String
  electronConfiguration    String?
  electronShellModel       ChemicalElementAtomicStructureElectronShellModel?
  electronegativity        String?
  electrons                String
  /// Multiple data types found: Array(String): 25%, Array(ChemicalElementAtomicStructureEnergyLevels): 75% out of 4 sampled entries
  energyLevels             Json?
  firstIonizationPotential String?
  ionizationEnergy         String
  /// Multiple data types found: String: 99.2%, Array(String): 0.8% out of 118 sampled entries
  neutrons                 Json
  protons                  String
  quantumNumbers           ChemicalElementAtomicStructureQuantumNumbers?
  vanDerWaalsRadius        String?
}

type ChemicalElementAtomicStructureElectronShellModel {
  shells         String[]
  totalElectrons String
}

type ChemicalElementAtomicStructureEnergyLevels {
  energy String
  level  String
}

type ChemicalElementAtomicStructureQuantumNumbers {
  azimuthal String
  magnetic  String?
  principal String
  spin      String?
}

type ChemicalElementBiologicalRole {
  description String
  importance  String?
  role        String
}

type ChemicalElementChemicalProperties {
  chemicalBehavior           String?
  chemicalBonding            String?
  chemicalReactions          String?
  commonOxidationStates      String
  description                String?
  electronegativity          String?
  ionizationPotential        String?
  oxidationStates            ChemicalElementChemicalPropertiesOxidationStates[]
  reactivity                 String
  standardReductionPotential String?
}

type ChemicalElementChemicalPropertiesOxidationStates {
  description String
  state       String
}

type ChemicalElementClassifications {
  classification String
  description    String
}

type ChemicalElementCompounds {
  /// Multiple data types found: String: 76.9%, Array(String): 23.1% out of 13 sampled entries
  applications Json?
  compound     String?
  description  String
  formula      String?
  name         String?
  /// Multiple data types found: String: 70%, ChemicalElementCompoundsProperties: 30% out of 30 sampled entries
  properties   Json?
}

type ChemicalElementCompoundsProperties {
  appearance   String?
  boilingPoint String?
  color        String?
  density      String?
  meltingPoint String?
  solubility   String?
}

type ChemicalElementCrystalStructures {
  description String
  temperature String?
  type        String
}

type ChemicalElementEconomicData {
  description        String?
  industrialUse      String?
  marketPrice        String
  producingCountries String
}

type ChemicalElementElectronConfig {
  configuration String
  description   String
}

type ChemicalElementEnvironmentalSafety {
  environmentalImpact  String?
  healthHazards        String
  safetyPrecautions    String
  sustainablePractices String?
}

type ChemicalElementFuturePredictions {
  description        String?
  prediction         String
  researchDirections String?
}

type ChemicalElementHealthEnvironmentalImpact {
  description         String?
  environmentalImpact String
  healthImpact        String
  safetyDataSheet     ChemicalElementHealthEnvironmentalImpactSafetyDataSheet?
  safetyMeasures      String?
}

type ChemicalElementHealthEnvironmentalImpactSafetyDataSheet {
  firstAidMeasures String
  handling         String
  storage          String
}

type ChemicalElementHistory {
  description        String
  details            String?
  event              String
  scientistsInvolved String?
  significance       String?
  year               String?
}

type ChemicalElementImageGallery {
  description String
  imageUrl    String
}

type ChemicalElementInterdisciplinaryConnections {
  astrophysics         String?
  biology              String?
  catalysis            String?
  chemistry            String?
  description          String?
  electronics          String?
  engineering          String?
  environmentalScience String?
  geology              String?
  greenTechnologies    String?
  healthScience        String?
  materialScience      String?
  materialsScience     String?
  medicalScience       String?
  medicine             String?
  nuclearEngineering   String?
  nuclearMedicine      String?
  nuclearPhysics       String?
  nuclearScience       String?
  nutrition            String?
  physics              String?
  publicHealth         String?
}

type ChemicalElementIsotopes {
  abundance     String
  /// Multiple data types found: String: 99.9%, Array(String): 0.1% out of 732 sampled entries
  decayMode     Json?
  description   String?
  halfLife      String
  isotopeNumber String
  name          String?
}

type ChemicalElementLegalStatus {
  description       String?
  legalRestrictions String
  regulations       String
}

type ChemicalElementMagneticElectricalProperties {
  description            String?
  electricalResistivity  String
  hallCoefficient        String?
  magneticSusceptibility String
}

type ChemicalElementNaturalOccurrence {
  description    String
  distribution   String?
  occurrenceType String
}

type ChemicalElementOpticalProperties {
  absorptionSpectrum String?
  description        String?
  reflectivity       String?
  refractiveIndex    String
}

type ChemicalElementOxidationStates {
  description String
  state       String
}

type ChemicalElementPhysicalProperties {
  atomicRadius                String?
  atomicVolume                String?
  boilingPoint                String
  brinellHardness             String?
  covalentRadius              String?
  density                     String
  description                 String?
  ductility                   String?
  malleability                String?
  meltingPoint                String
  mohsHardness                String?
  molarHeat                   String?
  molarHeatCapacity           String?
  phaseTransitionTemperatures String?
  soundVelocity               String?
  specificHeatCapacity        String?
  thermalConductivity         String?
  thermalExpansionCoefficient String?
  vanDerWaalsRadius           String?
}

type ChemicalElementPracticalApplications {
  application   String
  description   String
  /// Multiple data types found: String: 77.8%, Array(String): 22.2% out of 27 sampled entries
  examples      Json?
  researchAreas String?
}

type ChemicalElementQuantumProperties {
  electronShellModel ChemicalElementQuantumPropertiesElectronShellModel?
  /// Multiple data types found: String: 0.9%, Array(String): 88.6%, Array(ChemicalElementQuantumPropertiesEnergyLevels): 10.5% out of 114 sampled entries
  energyLevels       Json?
  quantumNumbers     ChemicalElementQuantumPropertiesQuantumNumbers
}

type ChemicalElementQuantumPropertiesElectronShellModel {
  description    String?
  /// Multiple data types found: String: 0.9%, Array(String): 99.1% out of 116 sampled entries
  shells         Json
  totalElectrons String
}

type ChemicalElementQuantumPropertiesEnergyLevels {
  energy String
  level  String
}

type ChemicalElementQuantumPropertiesQuantumNumbers {
  azimuthal   String
  description String?
  magnetic    String?
  principal   String
  spin        String?
}

type ChemicalElementSafetyDataSheet {
  description      String?
  firstAidMeasures String?
  handling         String
  storage          String
}

type ChemicalElementSpectralLines {
  color       String?
  description String?
  intensity   String?
  lineType    String?
  type        String?
  wavelength  String
}

type ChemicalElementSynthesisProduction {
  description       String?
  extractionMethods String?
  globalProduction  String?
  synthesisMethods  String
}

type ChemicalElementUserInteractions {
  contribution String?
  description  String?
  discussion   String?
  interaction  String?
  question     String?
}

type RatingsAmazon {
  average Float
  link    String
  number  Int
}

type RatingsGoodreads {
  average Float
  link    String
  number  Int
}

type RatingsGoogle {
  average Float
  link    String
  number  Int
}

type SubfieldRecommendationsBooks {
  amazonLink        String
  authors           String[]
  coverImage        String?
  difficulty        String
  englishTitle      String
  keywords          String[]
  keywordsSpan      String[]
  /// Multiple data types found: String: 14.5%, Int: 85.5% out of 276 sampled entries
  lastEditionNumber Json
  /// Multiple data types found: String: 14.5%, Int: 85.5% out of 276 sampled entries
  lastEditionYear   Json
  originCountry     String
  /// Multiple data types found: String: 15.9%, Int: 84.1% out of 276 sampled entries
  pages             Json
  /// Multiple data types found: String: 15.9%, Int: 84.1% out of 276 sampled entries
  publicationDate   Json
  ratings           SubfieldRecommendationsBooksRatings
  slug              String
  span              String[]
  spanishEdition    Boolean
  spanishTitle      String?
  summary           String[]
  /// Could not determine type: the field only had null or empty values in the sample set.
  syllabusImages    Json?
}

type SubfieldRecommendationsBooksRatings {
  amazon    SubfieldRecommendationsBooksRatingsAmazon
  goodreads SubfieldRecommendationsBooksRatingsGoodreads
  google    SubfieldRecommendationsBooksRatingsGoogle
}

type SubfieldRecommendationsBooksRatingsAmazon {
  average Float
  link    String
  /// Multiple data types found: String: 8.7%, Int: 91.3% out of 276 sampled entries
  number  Json
}

type SubfieldRecommendationsBooksRatingsGoodreads {
  average Float
  link    String
  /// Multiple data types found: String: 8%, Int: 92% out of 276 sampled entries
  number  Json
}

type SubfieldRecommendationsBooksRatingsGoogle {
  average Float
  link    String
  number  Int
}

type TopicsRecommendationBooks {
  amazonLink        String
  authors           String[]
  difficulty        String
  englishTitle      String
  keywords          String[]
  lastEditionNumber Int?
  lastEditionYear   Int?
  originCountry     String?
  /// Multiple data types found: Int: 99.7%, BigInt: 0.3% out of 388 sampled entries
  pages             Json?
  publicationDate   Int?
  ratings           TopicsRecommendationBooksRatings
  slug              String
  span              String[]
  spanishEdition    Boolean
  spanishTitle      String?
  summary           String[]
}

type TopicsRecommendationBooksRatings {
  amazon    TopicsRecommendationBooksRatingsAmazon
  goodreads TopicsRecommendationBooksRatingsGoodreads
  google    TopicsRecommendationBooksRatingsGoogle
}

type TopicsRecommendationBooksRatingsAmazon {
  average Float
  link    String
  number  Int
}

type TopicsRecommendationBooksRatingsGoodreads {
  average Float
  link    String
  number  Int
}

type TopicsRecommendationBooksRatingsGoogle {
  average Float
  link    String
  number  Int
}

type WordApplications {
  application String
}

type WordDefinitions {
  example      String
  meaning      String
  partOfSpeech String
  source       WordDefinitionsSource
}

type WordDefinitionsSource {
  author              String
  publicationYearDate String
  sourceType          String
  title               String
}

type WordHistoricalSignificance {
  event String
}

type WordMeasurementUnits {
  unit String
}

type WordRelatedConcepts {
  concept String
}

model ChemicalElement {
  id                           String                                      @id @default(auto()) @map("_id") @db.ObjectId
  allotropes                   ChemicalElementAllotropes[]
  appearance                   String
  atomicNumber                 String
  atomicStructure              ChemicalElementAtomicStructure
  /// Multiple data types found: String: 97.5%, Array(String): 2.5% out of 118 sampled entries
  atomicWeight                 Json
  biologicalRole               ChemicalElementBiologicalRole
  boilingPoint                 String
  chemicalProperties           ChemicalElementChemicalProperties
  classifications              ChemicalElementClassifications[]
  compounds                    ChemicalElementCompounds[]
  crystalStructures            ChemicalElementCrystalStructures[]
  density                      String
  description                  String
  discoveryYear                String
  economicData                 ChemicalElementEconomicData
  electronConfig               ChemicalElementElectronConfig?
  environmentalSafety          ChemicalElementEnvironmentalSafety
  futurePredictions            ChemicalElementFuturePredictions[]
  healthEnvironmentalImpact    ChemicalElementHealthEnvironmentalImpact
  history                      ChemicalElementHistory[]
  imageGallery                 ChemicalElementImageGallery[]
  interdisciplinaryConnections ChemicalElementInterdisciplinaryConnections
  isotopes                     ChemicalElementIsotopes[]
  legalStatus                  ChemicalElementLegalStatus
  magneticElectricalProperties ChemicalElementMagneticElectricalProperties
  meltingPoint                 String
  name                         String
  naturalOccurrence            ChemicalElementNaturalOccurrence
  opticalProperties            ChemicalElementOpticalProperties?
  oxidationStates              ChemicalElementOxidationStates[]
  physicalProperties           ChemicalElementPhysicalProperties
  practicalApplications        ChemicalElementPracticalApplications[]
  quantumProperties            ChemicalElementQuantumProperties
  safetyDataSheet              ChemicalElementSafetyDataSheet?
  slug                         String                                      @unique
  spectralLines                ChemicalElementSpectralLines[]
  symbol                       String                                      @unique
  synthesisProduction          ChemicalElementSynthesisProduction
  userInteractions             ChemicalElementUserInteractions[]
}

model ElectronicComponent {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  name Json?  @unique
  /// Field referred in an index, but found no data to define the type.
  slug Json?  @unique
}

model ElectronicComponentAdditionalResource {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ElectronicComponentApplication {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ElectronicComponentDatasheet {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ElectronicComponentFunction {
  id                      String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  electronicComponentName Json?  @unique
}

model ElectronicComponentKeyParameter {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ElectronicComponentMeasurements {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model ElectronicComponentOperation {
  id                      String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  electronicComponentName Json?  @unique
}

model ElectronicComponentThermalSpecifications {
  id                      String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  electronicComponentName Json?  @unique
}

model ElectronicComponentVariant {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Event {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  name Json?  @unique
}

model EventParticipant {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Field {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  /// Field referred in an index, but found no data to define the type.
  name Json?  @unique
}

model Person {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Reference {
  id String @id @default(auto()) @map("_id") @db.ObjectId
}

model Word {
  id                     String                       @id @default(auto()) @map("_id") @db.ObjectId
  /// Could not determine type: the field only had null or empty values in the sample set.
  antonyms               Json?
  applications           WordApplications[]
  audio                  String
  createdAt              DateTime                     @db.Date
  definitions            WordDefinitions[]
  etymology              String
  examples               String[]
  historicalSignificance WordHistoricalSignificance[]
  images                 String[]
  language               String
  measurementUnits       WordMeasurementUnits[]
  pronunciation          String
  relatedConcepts        WordRelatedConcepts[]
  slug                   String                       @unique
  synonyms               String[]
  tags                   String[]
  word                   String
}

model book {
  id                         String         @id @default(auto()) @map("_id") @db.ObjectId
  amazonLink                 String
  authors                    String[]
  difficulty                 String
  englishTitle               String
  keywords                   String[]
  lastEditionNumber          Int?
  lastEditionYear            Int?
  originCountry              String?
  pages                      Int?
  publicationDate            Int?
  ratings                    BookRatings
  slug                       String         @unique
  span                       String[]
  spanishEdition             Boolean
  spanishTitle               String?
  subFieldRecommendationSlug String?
  summary                    String[]
  syllabus                   BookSyllabus[]
  topicRecommendationSlug    String?
}

model ratings {
  id           String           @id @default(auto()) @map("_id") @db.ObjectId
  amazon       RatingsAmazon
  englishTitle String
  goodreads    RatingsGoodreads
  google       RatingsGoogle
}

model subfieldRecommendations {
  id       String                         @id @default(auto()) @map("_id") @db.ObjectId
  books    SubfieldRecommendationsBooks[]
  field    String
  slug     String
  /// Could not determine type: the field only had null or empty values in the sample set.
  span     Json?
  subField String
  summary  String
}

model subfieldsRecommendation {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  field    String
  slug     String @unique
  subField String
}

model topicsRecommendation {
  id           String                      @id @default(auto()) @map("_id") @db.ObjectId
  books        TopicsRecommendationBooks[]
  field        String
  keywords     String?
  slug         String                      @unique
  subField     String
  topic        String?
  topicSummary String?
}
