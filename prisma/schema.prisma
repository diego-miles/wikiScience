//üß©Don't Edit this file.‚ú®Generated in Tue Mar 12 2024 08:40:06 GMT-0600 (Central Standard Time)‚ú®

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Ratings {
  englishTitle String       @id @map("_id")
  amazon       RatingDetail
  goodreads    RatingDetail
  google       RatingDetail
  Book         Book[]

  @@map("ratings")
}

type RatingDetail {
  average Float
  number  Int
  link    String
}

model Book {
  id                         String                  @id @default(auto()) @map("_id") @db.ObjectId
  englishTitle               String
  spanishTitle               String?
  authors                    String[]
  difficulty                 String
  keywords                   String[]
  span                       String[]
  coverImage                 String?
  syllabusImages             String[]
  pages                      Int
  lastEditionYear            Int? // numero de edici√≥n
  lastEditionNumber          Int? // a√±o de edicion
  publicationDate            Int?
  originCountry              String?
  spanishEdition             Boolean?
  summary                    String[]
  amazonLink                 String?
  ratings                    Ratings?                @relation(fields: [englishTitle], references: [englishTitle])
  topicRecommendation        topicRecommendation?    @relation(fields: [topicRecommendationSlug], references: [slug])
  topicRecommendationSlug    String?
  subFieldRecommendation     subFieldRecommendation? @relation(fields: [subFieldRecommendationSlug], references: [slug])
  subFieldRecommendationSlug String?

  @@map("book")
}

model topicRecommendation {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  field        String
  subField     String
  topic        String @unique
  topicSummary String
  slug         String @unique
  books        Book[]

  @@map("topicsRecommendation")
}

model subFieldRecommendation {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  field    String
  subField String
  slug     String @unique
  books    Book[]

  @@map("subfieldsRecommendation")
}

// Model for the Electronic Component
model ElectronicComponent {
  id                      String                                    @id @default(auto()) @map("_id") @db.ObjectId
  name                    String                                    @unique
  slug                    String                                    @unique
  category                String
  type                    String
  subtype                 String
  manufacturers           String[]
  description             String
  lifeSpan                String
  history                 Json
  Glossary                String[]
  functionDiagram         String?
  operationDiagram        String?
  applicationDiagram      String?
  availability            Boolean
  // eolDate               DateTime
  pricing                 Float
  // packageType           String
  footprint               String
  standardsAndRegulations String[]
  relatedDocuments        String[]
  createdAt               DateTime                                  @default(now()) @map("createdAt")
  updatedAt               DateTime                                  @updatedAt @map("updatedAt")
  // Relationships
  variants                ElectronicComponentVariant[]
  Measurements            ElectronicComponentMeasurements[]
  function                ElectronicComponentFunction?
  operation               ElectronicComponentOperation?
  applications            ElectronicComponentApplication[]
  // technicalSpecs                  ElectronicComponentTechnicalSpecifications?
  thermalSpecifications   ElectronicComponentThermalSpecifications?
  datasheets              ElectronicComponentDatasheet[]
  additionalResources     ElectronicComponentAdditionalResource[]
}

// type History {
//   year String
//   event String
// }

// Model for Electronic Component Variants
model ElectronicComponentVariant {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  diagram                 String?
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Measurements in Science about Electronic Components
model ElectronicComponentMeasurements {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
  temperature             String
  voltage                 String
  current                 String
  resistance              String
  capacitance             String
  inductance              String
  frequency               String
  power                   String
  signalToNoiseRatio      String
  impedance               String
  gain                    String
  distortion              String
  bandwidth               String
  efficiency              String
  otherVariables          String
  toleranceAccuracy       String
}

// Model for Electronic Component Functions
model ElectronicComponentFunction {
  id                      String               @id @default(auto()) @map("_id") @db.ObjectId
  primaryFunction         String
  physicalPrinciples      Json
  chemistryPrinciples     String[]
  comparisons             String[]
  capabilities            String[]
  limitations             String[]
  diagrams                String?
  electronicComponent     ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String               @unique
}

// Model for Electronic Component Operations
model ElectronicComponentOperation {
  id                         String                            @id @default(auto()) @map("_id") @db.ObjectId
  internalStructure          String
  operatingMechanisms        String
  keyParameters              ElectronicComponentKeyParameter[]
  inputOutputCharacteristics String
  functionalRelationships    String
  equations                  String?
  diagrams                   String?
  electronicComponent        ElectronicComponent?              @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName    String                            @unique
}

// Model for Key Parameters of Electronic Components
model ElectronicComponentKeyParameter {
  id                      String                       @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  operation               ElectronicComponentOperation @relation(fields: [electronicComponentName], references: [electronicComponentName])
  electronicComponentName String
}

// Model for Electronic Component Applications
model ElectronicComponentApplication {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  field                   String
  examples                String[]
  designConsiderations    String
  challenges              String[]
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Thermal Specifications of Electronic Components
model ElectronicComponentThermalSpecifications {
  id                                 String               @id @default(auto()) @map("_id") @db.ObjectId
  thermalResistanceJunctionToCase    String
  thermalResistanceJunctionToAmbient String
  maximumOperatingTemperature        String
  minimumOperatingTemperature        String
  electronicComponent                ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName            String               @unique
}

// Model for Additional Resources of Electronic Components
model ElectronicComponentAdditionalResource {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  type                    String
  description             String
  link                    String
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Datasheets of Electronic Components
model ElectronicComponentDatasheet {
  id                      String               @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  url                     String
  // electronicComponentTechnicalSpecifications   ElectronicComponentTechnicalSpecifications? @relation(fields: [electronicComponentTechnicalSpecificationsId], references: [electronicComponentName])
  // electronicComponentTechnicalSpecificationsId String?
  electronicComponent     ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String?
}

model ChemicalElement {
  id                           String                               @id @default(auto()) @map("_id") @db.ObjectId
  symbol                       String                               @unique
  name                         String                               @unique
  slug                         String                               @unique
  atomicNumber                 Int
  atomicWeight                 Float
  description                  String
  discoveryYear                Int
  meltingPoint                 Float?
  boilingPoint                 Float?
  density                      Float?
  appearance                   String?
  classifications              ChemicalElementClassification[]
  atomicStructure              ElementAtomicStructure?
  isotopes                     ElementIsotope[]
  compounds                    ElementCompound[]
  history                      ChemicalElementHistory[]
  abundances                   ElementIsotopeAbundance[]
  crystalStructures            ElementCrystalStructure[]
  allotropes                   ElementAllotrope[]
  electronConfig               ElementElectronConfiguration?
  oxidationStates              ElementOxidationState[]
  physicalProperties           ElementPhysicalProperties?
  chemicalProperties           ElementChemicalProperties?
  environmentalSafety          ElementEnvironmentalSafety?
  practicalApplications        ElementPracticalApplication[]
  spectralLines                ElementSpectralLine[]
  naturalOccurrence            ElementNaturalOccurrence?
  biologicalRole               ElementBiologicalRole?
  economicData                 ElementEconomicData?
  imageGallery                 ElementImageGallery[]
  futurePredictions            ElementFuturePrediction[]
  userInteractions             ElementUserInteraction[]
  externalResources            ElementExternalResource[]
  magneticElectricalProperties ElementMagneticElectricalProperties?
  opticalProperties            ElementOpticalProperties?
  quantumProperties            ElementQuantumProperties?
  synthesisProduction          ElementSynthesisProduction?
  safetyDataSheet              ElementSafetyDataSheet?
  legalStatus                  ElementLegalStatus?
  interdisciplinaryConnections ElementInterdisciplinaryConnection?
}

model ChemicalElementClassification {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  classification String
  description    String?
  element        ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol  String          @unique
}

model ElementAtomicStructure {
  id                       String          @id @default(auto()) @map("_id") @db.ObjectId
  electrons                Int
  protons                  Int
  neutrons                 Int
  ionizationEnergy         Float?
  electronAffinity         Float?
  atomicRadius             Float?
  atomicPolarization       String?
  electronegativity        Float?
  firstIonizationPotential Float?
  element                  ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol            String          @unique
}

model ElementIsotope {
  id                  String                    @id @default(auto()) @map("_id") @db.ObjectId
  isotopeNumber       Int
  abundance           Float?
  halfLife            Float?
  decayMode           String?
  abundances          ElementIsotopeAbundance[]
  spin                Float?
  magneticMoment      Float?
  neutronCrossSection Float?
  element             ChemicalElement           @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol       String                    @unique
}

model ElementIsotopeAbundance {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  isotope       ElementIsotope  @relation(fields: [elementSymbol], references: [elementSymbol])
  abundance     Float
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ChemicalElementHistory {
  id                   String          @id @default(auto()) @map("_id") @db.ObjectId
  event                String
  year                 Int
  description          String?
  discoverer           String?
  placeOfDiscovery     String?
  context              String?
  etymology            String?
  historicalImportance String?
  element              ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol        String
}

model ElementCrystalStructure {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  type          String
  temperature   Float?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementAllotrope {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String          @unique
}

model ElementElectronConfiguration {
  id                   String          @id @default(auto()) @map("_id") @db.ObjectId
  configuration        String
  energyLevels         String[]
  sublevels            Json?
  electronsPerSublevel Json?
  element              ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol        String          @unique
}

model ElementOxidationState {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  state         Int
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String          @unique
}

model ElementPhysicalProperties {
  id                          String          @id @default(auto()) @map("_id") @db.ObjectId
  meltingPoint                Float?
  boilingPoint                Float?
  density                     Float?
  atomicRadius                Float?
  atomicVolume                Float?
  covalentRadius              Float?
  molarHeat                   String?
  thermalConductivity         Float?
  soundVelocity               String?
  mohsHardness                String?
  brinellHardness             String?
  specificHeatCapacity        String?
  thermalExpansionCoefficient String?
  phaseTransitionTemperatures String?
  element                     ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol               String          @unique
}

model ElementChemicalProperties {
  id                         String          @id @default(auto()) @map("_id") @db.ObjectId
  electronegativity          Float?
  ionizationPotential        Float?
  reactivity                 String?
  commonOxidationStates      String?
  standardReductionPotential Float?
  element                    ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol              String          @unique
}

model ElementPracticalApplication {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  application   String
  description   String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementCompound {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  formula       String
  description   String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementSpectralLine {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  wavelength    Float
  intensity     String
  lineType      String
  series        String?
  transition    String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementNaturalOccurrence {
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  occurrenceType String
  location       String?
  element        ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol  String          @unique
}

model ElementBiologicalRole {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  role          String
  description   String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String          @unique
}

model ElementEconomicData {
  id                   String          @id @default(auto()) @map("_id") @db.ObjectId
  marketPrice          String?
  producingCountries   String?
  industrialUse        String?
  reserves             Float?
  productionQuantities Float?
  element              ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol        String          @unique
}

model ElementImageGallery {
  id                          String          @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl                    String
  description                 String?
  interactiveVisualizationUrl String?
  element                     ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol               String
}

model ElementEnvironmentalSafety {
  id                    String          @id @default(auto()) @map("_id") @db.ObjectId
  environmentalImpact   String?
  ecosystemImpact       String?
  healthImpact          String
  safetyPrecautions     String?
  biosphereAccumulation String?
  element               ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol         String          @unique
}

model ElementFuturePrediction {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  prediction    String
  description   String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementUserInteraction {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  contribution  String
  question      String?
  discussion    String?
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementExternalResource {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  url           String
  resourceType  String
  description   String?
  references    Json
  element       ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol String
}

model ElementMagneticElectricalProperties {
  id                     String          @id @default(auto()) @map("_id") @db.ObjectId
  magneticSusceptibility String?
  electricalResistivity  String?
  hallCoefficient        String?
  element                ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol          String          @unique
}

model ElementOpticalProperties {
  id                 String          @id @default(auto()) @map("_id") @db.ObjectId
  refractiveIndex    String?
  reflectivity       String?
  absorptionSpectrum Json
  element            ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol      String          @unique
}

model ElementQuantumProperties {
  id                 String          @id @default(auto()) @map("_id") @db.ObjectId
  quantumNumbers     Json
  electronShellModel Json
  energyLevels       String[]
  element            ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol      String          @unique
}

model ElementSynthesisProduction {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  synthesisMethods  String
  extractionMethods String
  globalProduction  String?
  element           ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol     String          @unique
}

model ElementSafetyDataSheet {
  id               String          @id @default(auto()) @map("_id") @db.ObjectId
  handling         String
  storage          String
  firstAidMeasures String
  element          ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol    String          @unique
}

model ElementLegalStatus {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  regulations       Json
  legalRestrictions String
  element           ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol     String          @unique
}

model ElementInterdisciplinaryConnection {
  id                String          @id @default(auto()) @map("_id") @db.ObjectId
  connectionDetails Json
  element           ChemicalElement @relation(fields: [elementSymbol], references: [symbol])
  elementSymbol     String          @unique
}
