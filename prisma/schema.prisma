//üß©Don't Edit this file.‚ú®Generated in Sat Mar 30 2024 23:53:29 GMT-0600 (Central Standard Time)‚ú®

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Ratings {
  amazon    RatingDetail
  goodreads RatingDetail
  google    RatingDetail
}

type RatingDetail {
  average Float
  number  Int
  link    String
}

model Book {
  id                         String                  @id @default(auto()) @map("_id") @db.ObjectId
  englishTitle               String
  spanishTitle               String?
  authors                    String[]
  difficulty                 String?
  keywords                   String[]
  span                       String[]
  coverImage                 String?
  syllabusImages             String[]
  pages                      Int?
  lastEditionYear            Int? // numero de edici√≥n
  lastEditionNumber          Int? // a√±o de edicion
  publicationDate            Int?
  originCountry              String?
  spanishEdition             Boolean?
  summary                    String[]
  amazonLink                 String?
  ratings                    Ratings
  topicRecommendation        topicRecommendation?    @relation(fields: [topicRecommendationSlug], references: [slug])
  topicRecommendationSlug    String?
  subFieldRecommendation     subFieldRecommendation? @relation(fields: [subFieldRecommendationSlug], references: [slug])
  subFieldRecommendationSlug String?
  syllabus                   Json?
  slug                       String                  @unique

  @@map("book")
}

model topicRecommendation {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  field        String
  subField     String
  topic        String @unique
  topicSummary String
  slug         String @unique
  books        Book[]

  @@map("topicsRecommendation")
}

model subFieldRecommendation {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  field    String
  subField String
  slug     String @unique
  books    Book[]

  @@map("subfieldsRecommendation")
}

// Model for the Electronic Component
model ElectronicComponent {
  id                      String                                    @id @default(auto()) @map("_id") @db.ObjectId
  name                    String                                    @unique
  slug                    String                                    @unique
  category                String
  type                    String
  subtype                 String
  manufacturers           String[]
  description             String
  lifeSpan                String
  history                 Json
  Glossary                String[]
  functionDiagram         String?
  operationDiagram        String?
  applicationDiagram      String?
  availability            Boolean
  // eolDate               DateTime
  pricing                 Float
  // packageType           String
  footprint               String
  standardsAndRegulations String[]
  relatedDocuments        String[]
  createdAt               DateTime                                  @default(now()) @map("createdAt")
  updatedAt               DateTime                                  @updatedAt @map("updatedAt")
  // Relationships
  variants                ElectronicComponentVariant[]
  Measurements            ElectronicComponentMeasurements[]
  function                ElectronicComponentFunction?
  operation               ElectronicComponentOperation?
  applications            ElectronicComponentApplication[]
  // technicalSpecs                  ElectronicComponentTechnicalSpecifications?
  thermalSpecifications   ElectronicComponentThermalSpecifications?
  datasheets              ElectronicComponentDatasheet[]
  additionalResources     ElectronicComponentAdditionalResource[]
}

// type History {
//   year String
//   event String
// }

// Model for Electronic Component Variants
model ElectronicComponentVariant {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  diagram                 String?
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Measurements in Science about Electronic Components
model ElectronicComponentMeasurements {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
  temperature             String
  voltage                 String
  current                 String
  resistance              String
  capacitance             String
  inductance              String
  frequency               String
  power                   String
  signalToNoiseRatio      String
  impedance               String
  gain                    String
  distortion              String
  bandwidth               String
  efficiency              String
  otherVariables          String
  toleranceAccuracy       String
}

// Model for Electronic Component Functions
model ElectronicComponentFunction {
  id                      String               @id @default(auto()) @map("_id") @db.ObjectId
  primaryFunction         String
  physicalPrinciples      Json
  chemistryPrinciples     String[]
  comparisons             String[]
  capabilities            String[]
  limitations             String[]
  diagrams                String?
  electronicComponent     ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String               @unique
}

// Model for Electronic Component Operations
model ElectronicComponentOperation {
  id                         String                            @id @default(auto()) @map("_id") @db.ObjectId
  internalStructure          String
  operatingMechanisms        String
  keyParameters              ElectronicComponentKeyParameter[]
  inputOutputCharacteristics String
  functionalRelationships    String
  equations                  String?
  diagrams                   String?
  electronicComponent        ElectronicComponent?              @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName    String                            @unique
}

// Model for Key Parameters of Electronic Components
model ElectronicComponentKeyParameter {
  id                      String                       @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  operation               ElectronicComponentOperation @relation(fields: [electronicComponentName], references: [electronicComponentName])
  electronicComponentName String
}

// Model for Electronic Component Applications
model ElectronicComponentApplication {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  field                   String
  examples                String[]
  designConsiderations    String
  challenges              String[]
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Thermal Specifications of Electronic Components
model ElectronicComponentThermalSpecifications {
  id                                 String               @id @default(auto()) @map("_id") @db.ObjectId
  thermalResistanceJunctionToCase    String
  thermalResistanceJunctionToAmbient String
  maximumOperatingTemperature        String
  minimumOperatingTemperature        String
  electronicComponent                ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName            String               @unique
}

// Model for Additional Resources of Electronic Components
model ElectronicComponentAdditionalResource {
  id                      String              @id @default(auto()) @map("_id") @db.ObjectId
  type                    String
  description             String
  link                    String
  electronicComponent     ElectronicComponent @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String
}

// Model for Datasheets of Electronic Components
model ElectronicComponentDatasheet {
  id                      String               @id @default(auto()) @map("_id") @db.ObjectId
  name                    String
  description             String
  url                     String
  // electronicComponentTechnicalSpecifications   ElectronicComponentTechnicalSpecifications? @relation(fields: [electronicComponentTechnicalSpecificationsId], references: [electronicComponentName])
  // electronicComponentTechnicalSpecificationsId String?
  electronicComponent     ElectronicComponent? @relation(fields: [electronicComponentName], references: [name])
  electronicComponentName String?
}

model ChemicalElement {
  id                           String                               @id @default(auto()) @map("_id") @db.ObjectId
  symbol                       String                               @unique
  name                         String                               @unique
  slug                         String                               @unique
  atomicNumber                 Int
  atomicWeight                 Float
  description                  String
  history                      History[]
  discoveryYear                Int
  meltingPoint                 Float?
  boilingPoint                 Float?
  density                      Float?
  appearance                   String?
  classifications              ChemicalElementClassification[]
  atomicStructure              ElementAtomicStructure
  isotopes                     ElementIsotope[]
  compounds                    ElementCompound[]
  abundances                   ElementIsotopeAbundance[]
  crystalStructures            ElementCrystalStructure[]
  allotropes                   ElementAllotrope[]
  electronConfig               ElementElectronConfiguration // ElementElectronConfiguration
  oxidationStates              ElementOxidationState[]
  physicalProperties           ElementPhysicalProperties
  chemicalProperties           ElementChemicalProperties
  environmentalSafety          ElementEnvironmentalSafety
  practicalApplications        ElementPracticalApplication[] // Array of ElementPracticalApplication
  spectralLines                ElementSpectralLine[]
  naturalOccurrence            ElementNaturalOccurrence
  biologicalRole               ElementBiologicalRole
  economicData                 ElementEconomicData
  imageGallery                 ImageGallery[]
  healthEnvironmentalImpact    ElementHealthEnvironmentalImpact
  futurePredictions            ElementFuturePrediction[]
  userInteractions             ElementUserInteraction[]
  externalResources            ElementExternalResource[]
  magneticElectricalProperties ElementMagneticElectricalProperties?
  opticalProperties            ElementOpticalProperties?
  quantumProperties            ElementQuantumProperties?
  synthesisProduction          ElementSynthesisProduction?
  safetyDataSheet              ElementSafetyDataSheet?
  legalStatus                  ElementLegalStatus?
  interdisciplinaryConnections Json
}

type ElementPracticalApplication {
  application String
  description String
}

type ElementElectronConfiguration {
  configuration String
  description   String
}

// type ElementInterdisciplinaryConnection {
//     connectionDetails String
// }

type ElementLegalStatus {
  regulations       String
  legalRestrictions String
}

type ElementSafetyDataSheet {
  handling         String
  storage          String
  firstAidMeasures String
}

type ElementSynthesisProduction {
  synthesisMethods  String
  extractionMethods String
  globalProduction  String
}

type ElementQuantumProperties {
  quantumNumbers     Json
  electronShellModel Json
  energyLevels       Json
}

type ElementOpticalProperties {
  refractiveIndex    String
  reflectivity       String
  absorptionSpectrum String
}

type ElementMagneticElectricalProperties {
  magneticSusceptibility String
  electricalResistivity  String
  hallCoefficient        String
}

type ElementExternalResource {
  resourceType String
  link         String
  description  String
}

type ElementFuturePrediction {
  prediction  String
  description String
}

type ElementIsotopeAbundance {
  isotopeNumber Int
  abundance     Float
  halfLife      String
  decayMode     String
}

type ElementHealthEnvironmentalImpact {
  healthImpact        String
  environmentalImpact String
}

type ChemicalElementClassification {
  classification String
  description    String
}

type ElementAtomicStructure {
  electrons                Int?
  protons                  Int?
  neutrons                 Int?
  ionizationEnergy         Float?
  electronAffinity         Float?
  atomicRadius             Int?
  atomicPolarization       String
  electronegativity        Float
  firstIonizationPotential Float
}

type ElementIsotope {
  isotopeNumber Int
  abundance     Float
  halfLife      String
  decayMode     String
}

type ElementCompound {
  name        String
  formula     String
  description String
}

type History {
  event       String
  year        Int
  description String
}

type ElementCrystalStructure {
  type        String
  temperature Float
  description String
}

type ElementAllotrope {
  name        String
  description String
}

type ElementOxidationState {
  state       Int
  description String
}

type ElementPhysicalProperties {
  meltingPoint                Float
  boilingPoint                Float
  density                     Float
  atomicRadius                Int
  atomicVolume                Float
  covalentRadius              Int
  molarHeat                   String
  thermalConductivity         Float
  soundVelocity               String
  mohsHardness                String
  brinellHardness             String
  specificHeatCapacity        String
  thermalExpansionCoefficient String
  phaseTransitionTemperatures String
}

type ElementChemicalProperties {
  electronegativity          Float
  ionizationPotential        Float
  reactivity                 String
  commonOxidationStates      String
  standardReductionPotential Float
  description                String
}

type ElementEnvironmentalSafety {
  healthHazards     String
  safetyPrecautions String
}

type ImageGallery {
  imageUrl    String
  description String
}

type ElementSpectralLine {
  wavelength Float
  intensity  String
  lineType   String
}

type ElementNaturalOccurrence {
  occurrenceType String
  description    String
}

type ElementBiologicalRole {
  role        String
  description String
}

type ElementEconomicData {
  marketPrice        String
  producingCountries String
  industrialUse      String
  description        String
}

type ElementUserInteraction {
  contribution String
  question     String
  discussion   String
}
